package security.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import security.entities.Role;
import security.entities.User;
import security.repositories.UserRepository;

import java.util.Collections;
import java.util.Map;

@Controller    // This means that this class is a Controller
 // This means URL's start with /demo (after security.Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@PostMapping("/registration")
	public String addUser(User user, Map<String, Object> model) {
		User userFromDb = userRepository.findByLogin(user.getLogin());

		if (userFromDb != null) {
			model.put("message", "User exists!");
			return "registration";
		}

		user.setActive(true);
		user.setRoles(Collections.singleton(Role.USER));
		userRepository.save(user);

		return "redirect:/login";
	}
    @GetMapping("/registration")
    public String registration() {
        return "registration";
    }

//    @PostMapping("/registration")
//    public String addUser( User user, Map<String, Object> model) {
//        User userFromDb = userRepository.findByname(user.getName());
//
//        if (userFromDb != null) {
//            model.put("message", "User exists!");
//            return "registration";
//        }
//
//
//
//        userRepository.save(user);
//
//        return "redirect:/login";
//    }
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
